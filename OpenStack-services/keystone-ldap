Tested with Red Hat IdM (FreeIPA)

1. Add the service accounts in the IPA host. Use "changeme" as the password as it has to be changed after "first login":

ipa user-add glance --cn=glance --first=glance --last=service
ipa passwd glance
ipa user-add ceilometer --cn=ceilometer --first=ceilometer --last=service
ipa passwd ceilometer
ipa user-add cinder --cn=cinder --first=cinder --last=service
ipa passwd cinder
ipa user-add heat --cn=heat --first=heat --last=service
ipa passwd heat
ipa user-add neutron --cn=neutron --first=neutron --last=service
ipa passwd neutron
ipa user-add nova --cn=nova --first=nova --last=service
ipa passwd nova
ipa user-add swift --cn=swift --first=swift --last=service

2. Initiate a session with each service user from a host configured to authenticate to the IPA host:

Note: Install sssd first if needed (yum install sssd)

kinit swift
Password for swift@JENTRENA.USERSYS.REDHAT.COM:
Password expired.  You must change it now.
Enter new password:
Enter it again:

Note: The passwords can be found in the /etc/$SERVICE_NAME for each service

3. Create another user in the IPA host and add the role admin for the admin tenant:

In the IPA host:

ipa user-add ospadmin --cn=ospadmin --first=Admin --last=OSPAdmin
ipa passwd ospadmin

Then run kinit to change the password: 

kinit ospadmin

4. Ensure keystone.conf has these settings

[identity]  
#driver=keystone.identity.backends.sql.Identity  
driver=keystone.identity.backends.ldap.Identity  
  
[assignment]  
driver = keystone.assignment.backends.sql.Assignment  
  
[ldap]  
url = ldap://10.33.20.110  
user_tree_dn=cn=users,cn=accounts,dc=jentrena,dc=usersys,dc=redhat,dc=com  
group_tree_dn=cn=groups,cn=accounts,dc=jentrena,dc=usersys,dc=redhat,dc=com  
  
user_id_attribute=uid  
user_name_attribute=uid  
user_mail_attribute=mail  
  
user_enabled_attribute=nsAccountLock  
user_enabled_default=False  
user_enabled_invert=true  
  
user_allow_create=false  
user_allow_update=false  
user_allow_delete=false  

5. Restart the service:

systemctl restart openstack-keystone

7. Load the service token

export OS_SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0
export OS_SERVICE_TOKEN="token_from_keystone_conf"

8. Add the users with their roles to the tenants:

keystone user-role-add --user-id ospadmin --tenant-id "ID of the admin tenant" --role-id "ID of the admin role"
keystone user-role-add --user nova --role admin --tenant services  
keystone user-role-add --user ceilometer --role admin --tenant services  
keystone user-role-add --user cinder --role admin --tenant services  
keystone user-role-add --user glance --role admin --tenant services  
keystone user-role-add --user neutron --role admin --tenant services  
keystone user-role-add --user swift --role admin --tenant services 

9. Confirm it works
 
First, load the environment with the ospadmin user. Then:
 
# keystone user-list  
+------------+------------+---------+-------+  
|     id     |    name    | enabled | email |  
+------------+------------+---------+-------+  
| ceilometer | ceilometer |   True  |       |  
|   cinder   |   cinder   |   True  |       |  
|   glance   |   glance   |   True  |       |  
|    heat    |    heat    |   True  |       |  
|  neutron   |  neutron   |   True  |       |  
|    nova    |    nova    |   True  |       |  
|  ospadmin  |  ospadmin  |   True  |       |  
|   ramon    |   ramon    |  False  |       |  
|   swift    |   swift    |   True  |       |  
|   user1    |   user1    |  False  |       |  
|   user2    |   user2    |  False  |       |  
|   user3    |   user3    |  False  |       |  
|   user4    |   user4    |  False  |       |  
+------------+------------+---------+-------+  


10. Bonus trick. This script will list all the roles per tenant for a given user:

#!/bin/bash  
for tenant in `keystone tenant-list | grep -v "-" | grep -v "id" | awk '{print $4}'`;  
  do keystone user-role-list --user $1 --tenant $tenant;  
done
